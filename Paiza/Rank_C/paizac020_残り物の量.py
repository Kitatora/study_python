# coding: utf-8
# 自分の得意な言語で
# Let's チャレンジ！！

from decimal import Decimal

M, P, Q = map(int, input().split())
m = Decimal(M)
p = Decimal(P)
q = Decimal(Q)
lef = Decimal(m*(1-p/100)*(1-q/100))
print(lef)

///
入力
10 31 52
出力
3.312

小数点を含む計算はなぜ思った通りにならないのか？
https://docs.python.org/ja/3/tutorial/floatingpoint.html
浮動小数点数は、計算機ハードウェアの中では、基数を2とする(2進法の)分数として表現されています。例えば、小数0.125
は、 1/10 + 2/100 + 5/1000 という値を持ちますが、これと同様に、2 進法の分数0.001は 0/2 + 0/4 + 1/8 という値になります。
これら二つの分数は同じ値を持っていますが、ただ一つ、最初の分数は基数 10 で記述されており、二番目の分数は基数 2 で記述されていることが違います。
残念なことに、ほとんどの小数は 2 進法の分数として正確に表わすことができません。
その結果、一般に、入力した 10 進の浮動小数点数は、 2 進法の浮動小数点数で近似された後、実際にマシンに記憶されます。
///